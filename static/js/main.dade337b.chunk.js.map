{"version":3,"sources":["components/Card.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","handleChangeCheck","e","state","checkCorrect","setState","textDecoration","target","checked","time","this","Date","toString","styPTodo","whiteSpace","overflow","color","fontSize","style","margin","marginBottom","padding","background","borderRadius","Grid","container","spacing","item","xs","display","k","Checkbox","checkedIcon","icon","onChange","md","sm","todo","fontStyle","Button","variant","onClick","del","Component","Input","updateInput","submitted","input","value","deleteTodo","val","newSubmit","submit","filter","v","i","submitTodo","trim","concat","listItems","map","sub","index","from","opacity","to","config","delay","duration","Container","maxWidth","marginTop","backgroundColor","textAlign","TextField","fullWidth","label","justifyContent","alignItems","size","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dade337b.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Grid from  '@material-ui/core/Grid';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckCircleTwoToneIcon from '@material-ui/icons/CheckCircleTwoTone';\n\n\nclass Card extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      textDecoration:\"none\",\n      checkCorrect:false,\n      time:\"\"\n    }\n  }\n  handleChangeCheck=(e)=>{\n    if (this.state.checkCorrect){\n      this.setState({checkCorrect:false})\n    }else{\n      this.setState({checkCorrect:true})}\n      this.setState({textDecoration:(e.target.checked)?\"line-through\":\"none\"})\n  }\n  componentDidMount(){\n    this.setState({time:new Date().toString()})\n  }\n  render(){\n    const sty3={\n      margin:\"auto\",\n      marginBottom:15,\n      padding:15,\n      background:\"linear-gradient(to right,darkblue,darkred)\",\n      borderRadius:10\n    }\n    const styPTodo={\n      whiteSpace:\"normal\",\n      textDecoration:this.state.textDecoration,\n      overflow:\"auto\",\n      color:\"white\",\n      fontSize:20\n    }\n    const styPTime={\n      color:\"#ccc\",\n      fontSize:12,\n      fontStyle:\"italic\"\n    }\n    const styPId={\n      display:\"inline\",\n      color:\"white\"\n    }\n    return(\n      <div style={sty3} >\n        <Grid \n        container  \n        spacing={1}>\n          <Grid item xs={2}>\n           <p style={styPId}>{this.props.k+1}    </p>\n            <Checkbox  \n            checkedIcon={<CheckCircleTwoToneIcon fontSize=\"large\" style={{color:\"lime\"}}/>}\n            icon={<CheckCircleTwoToneIcon fontSize=\"large\" style={{color:\"darkgrey\"}}/>}\n            checked={this.state.checkCorrect} \n            onChange={this.handleChangeCheck}/>\n          </Grid>\n          <Grid item md={9} sm={8} xs={8}>\n            <p style={styPTodo}>{this.props.todo}</p>\n            <p style={styPTime}>{this.state.time}</p>\n          </Grid>\n          <Grid item md={1} sm={2} xs={2}>\n            <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={()=>{\n              this.setState({\n                textDecoration:\"none\",\n                checkCorrect:false\n              });\n              this.props.del(this.props.k);}}>\n              <DeleteIcon/>\n            </Button>\n          </Grid>\n        </Grid>\n      </div>\n      )\n     }\n   }\nexport default Card;\n","import React, {Component} from 'react';\nimport Card from './Card'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Send from '@material-ui/icons/Send';\nimport Container from  '@material-ui/core/Container';\nimport Grid from  '@material-ui/core/Grid';\nimport {Spring} from 'react-spring/renderprops';\nclass Input extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      input:\"\",\n      submit:[],\n      submitted:false\n    }\n  }\n  updateInput=(e)=>{\n    this.setState({\n      submitted:false,\n      input:e.target.value\n    })\n  }\n  deleteTodo=(val)=>{\n    let newSubmit=this.state.submit.filter((v,i)=>{return (i!==val) })\n    this.setState({\n      submit:newSubmit\n    })\n  }\n  submitTodo=()=>{\n    if (this.state.input.trim()!==\"\"){\n    this.setState({\n      submit:this.state.submit.concat(this.state.input),\n      submitted:true,\n      input:\"\"\n    })\n  }\n  }\n  render(){\n    const listItems = this.state.submit.map(\n      (sub,index) =>  \n      <Spring\n      from={{opacity:0}}\n      to={{opacity:1}}\n      config={{delay:200,duration:1000}}\n    >\n      {props=>(\n      <div style={props}>\n          <Card todo={sub} del={this.deleteTodo} k={index} key={index}/>\n      </div>\n    )}</Spring>\n    );\n    const sty={\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    }\n    const sty2={\n      margin:\"auto\",\n      marginTop:20,\n      padding:15,\n      backgroundColor:\"white\",\n      borderRadius:10\n    }\n    const styH1={\n      textAlign:\"center\",\n      margin:15\n    }\n    return (\n\n      <Container  maxWidth=\"md\" style={sty2} > \n        <h1 style={styH1}>TODO APP</h1>\n        <Grid container spacing={1} >\n          <Grid item xs={10} md={11}>\n          <TextField\n          fullWidth={true}\n          label=\"Enter Todo\"\n          variant=\"outlined\"\n          onChange={this.updateInput}\n          value={(this.state.submitted)?\"\":this.state.input}\n          />\n          </Grid> \n          <Grid item xs={2} md={1} style={sty}>\n          <Button\n          size=\"large\"\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.submitTodo}>\n            <Send/>\n          </Button>\n          </Grid>\n          <Grid item xs={12}>\n          <div>{listItems}</div>\n          </Grid>\n        </Grid>\n      </Container>\n    )\n   }\n}\nexport default Input;\n","import './App.css';\nimport React, {Component} from 'react';\nimport Input from './components/Input';\nimport {Spring} from 'react-spring/renderprops';\nclass App extends Component{\n  render(){\n    return(\n       <Spring\n          from={{opacity:0}}\n          to={{opacity:1}}\n          config={{delay:1000,duration:1000}}\n        >\n          {props=>(\n          <div style={props}>\n            <Input/>\n          </div>\n        )}</Spring>\n    );\n   }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(<App />,document.getElementById('root'));\nreportWebVitals();\n"],"sourceRoot":""}